listen 80;
listen [::]:80;
server_name harpercharlescompany.com;

add_header X-Frame-Options "SAMEORIGIN";
add_header X-Content-Type-Options "nosniff";

index index.html index.htm index.php;

charset utf-8;

location / {
  try_files $uri $uri/ /index.php?$query_string;
	rewrite ^/(.*)$ /index.php last;
}

location = /favicon.ico { access_log off; log_not_found off; }
location = /robots.txt  { access_log off; log_not_found off; }

error_page 404 /index.php;

location ~ \.php$ {
  fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
  fastcgi_index index.php;
  fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
  include fastcgi_params;
}

location ~ /\.(?!well-known).* {
  deny all;
}


# Do not send the Nginx version number in error pages and Server header.
server_tokens off;

# Re-enable the Cross-site scripting (XSS) filter if disabled by user.
add_header X-XSS-Protection "1; mode=block";

# HSTS header setting including preload.
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Gzip compression settings.
gzip on;
gzip_disable "MSIE [1-6]\\.(?!.*SV1)";
gzip_proxied any;
gzip_types text/plain text/xml text/css text/javascript application/javascript application/x-javascript application/pdf application/xml application/font-woff2 image/png image/jpeg image/gif image/x-icon image/svg+xml;
gzip_vary on;

# Increased buffer prevents large pages from 502 bad gateways.
fastcgi_buffers 128 4096k;
fastcgi_buffer_size 4096k;
fastcgi_read_timeout 300;

# Increased buffer prevents large pages from 502 bad gateways.
proxy_buffering on;
proxy_buffer_size 128k;
proxy_buffers 4 256k;
proxy_busy_buffers_size 256k;
proxy_connect_timeout 300;
proxy_send_timeout 300;
proxy_read_timeout 300;

# Increased buffer prevents legacy large header requests with cookies from 400 bad requests.
large_client_header_buffers 4 32k;

# Allows long execution of slow pages to return to screen without a timeout.
send_timeout 300;

# Apply basic HTTP authentication for development domains.
set $auth_basic off;

if ($host ~ ^dev) {
	set $auth_basic "Restricted Access";
}

# auth_basic $auth_basic;
# auth_basic_user_file /var/www/vhosts/.htpasswd;

# Always reject access to Environment Variables.
location = /.env {
	deny all;

	return 404;
}

# Allow Lets Encrypt SSL renewal process to access certification files without authentication.
location ^~ /.well-known {
	allow all;
	auth_basic off;

	default_type "text/plain";
}

# Always allow Git web hooks access without authentication.
location ~* ^/Deploy {
	allow all;
	auth_basic off;
}

# Deny direct access to any system files.
# TODO: does not currently restrict access to PHP files. https://dev2.sp.edisonhousegroup.co.uk/Cron/Parts/DeployPull.php
location ~* ^/(Assets|Cron) {
	return 404;
}

# Apply directory listing and access restrictions for developer use.
location ~* ^/(Scripts|Setup|Tests) {

	# Jacks House.
	#allow 81.128.248.146;

	deny all;

	autoindex on;
}

# Rewrite some standardised requests to the central request handler.
location ~* ^/(favicon.ico|robots.txt|sitemap.xml)$ {
	access_log off;
	log_not_found off;

	rewrite ^/(.*)$ /index.php;
}

# Ensures font files always load with CORS.
location ~* ^/(.*\.(otf|eot|ttf|woff|woff2))$ {
	access_log off;
	log_not_found off;

	expires max;

	add_header Cache-Control "public";
	add_header Access-Control-Allow-Origin "*";
}

# Ensure cache header so browser caches static flat files for a set period.
location ~* ^/(.*\.(gif|jpg|jpeg|png|svg|webp))$ {
	access_log off;
	log_not_found off;

	expires 30d;

	add_header Cache-Control "public";

	try_files $uri @fallback-image;
}

# Ensure cache header so browser caches static flat files for a set period.
location ~* ^/(.*\.(css|ico|js|pdf|swf|txt|xml|zip|zpl))$ {
	access_log off;
	log_not_found off;

	expires 30d;

	add_header Cache-Control "public";

	try_files $uri @fallback-download;
}

# Fallback called if image not found.
location @fallback-image {
	rewrite ^(.*)$ /app/Cache/Image.php;
}

# Fallback called if download not found.
location @fallback-download {
	rewrite ^(.*)$ /app/Cache/Download.php;
}

# Prevent direct access to resource PHP files.
# TODO: does not work currently.
location ~* ^/resources/(.+)\.php {
	deny all;

	access_log off;
	log_not_found off;
}

# Rewrite rules for backend paths.
location /admin {
	rewrite ^([^.]*[^/])$ $1/ permanent;
}

location /App {
	rewrite ^([^.]*[^/])$ $1/ permanent;
}

location /mobile {
	rewrite ^([^.]*[^/])$ $1/ permanent;
}

location /portal {
	rewrite ^([^.]*[^/])$ $1/ permanent;
}

# Require HTTP Authentication for Sage Accounts import/export scripts.
location /System/API/SageAccounts {
	proxy_set_header Authorization $http_authorization;
	proxy_set_header Host $http_host;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_pass_header Authorization;
}

# Always allow App API access without authentication.
# TODO: does not work, overridden by something.
location /System/API/App {
	allow all;
	auth_basic off;
}

# Rewrite non-existent PHP files to the central index.php request handler.
if (!-e $request_filename) {
	set $test E;
}

if ($uri ~ \.php) {
	set $test "${test}P";
}

if ($test = EP) {
	rewrite ^/(.*)$ /index.php?$1;
}